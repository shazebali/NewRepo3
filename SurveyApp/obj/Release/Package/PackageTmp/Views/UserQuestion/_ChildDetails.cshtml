@using SurveyApp.Models;
@using System.Data;

@{
    int studyId = String.IsNullOrEmpty(Request.QueryString["studyId"]) != true ? Convert.ToInt32(Request.QueryString["studyId"]) : 0;
    int childID = String.IsNullOrEmpty(Request.QueryString["childIdts"]) != true ? Convert.ToInt32(Request.QueryString["childIdts"]) : 0;
    string studyName = String.IsNullOrEmpty(Request.QueryString["studyName"]) != true ? Request.QueryString["studyName"].ToString() : "";
    string childNamets = String.IsNullOrEmpty(Request.QueryString["child"]) != true ? Request.QueryString["child"].ToString() : "";
    int userId = WebSecurity.CurrentUserId;

    inPer = "";

    DataSet dschild = SurveyApp.DataHelper.GetChildbyUserID(userId);
    DataSet dsReveseandLiveEvent = SurveyApp.DataHelper.GetAdverseReaction(userId, 0, (int)childID);
    for (int i = 0; i < dschild.Tables[0].Rows.Count; i++)
    {
        if ((int?)dschild.Tables[0].Rows[i]["ID"] == childID)
        {
        }
        else
        {
            dschild.Tables[0].Rows[i].Delete();
        }

    }
    dschild.AcceptChanges();


    string[] roles = Roles.GetRolesForUser(User.Identity.Name);

    userId = WebSecurity.CurrentUserId;
    role = roles[0];

    dsQuestionsFilled = SurveyApp.DataHelper.QuestionGetFilledAnswers(userId);
    dsChildrenSchedules = SurveyApp.DataHelper.getChildrenSchedulesByUserId(userId, DateTime.Now);

    int schoolId = 0;
    if (dsReveseandLiveEvent != null && dsReveseandLiveEvent.Tables != null && dsReveseandLiveEvent.Tables.Count >= 6)
    {
        if (dsReveseandLiveEvent.Tables[5] != null && dsReveseandLiveEvent.Tables[5].Rows.Count > 0)
        {
            schoolId = Convert.ToInt32(dsReveseandLiveEvent.Tables[5].Rows[0]["SchoolId"]);
        }
    }

    string childName = "";
    if (childID > 0)
    {
        using (var cChild = new ChildContext())
        {
            Child objChildTS = cChild.Children.Where(c => c.Id == childID).FirstOrDefault();
            childName = objChildTS.Name;
        }
    }

}

@functions{
    DataSet dsQuestionsFilled, dsChildrenSchedules, Ds_othersurvey, ds_advershist, ds_lifevent;
    int userId;
    string role = "";
    string inPer = "";
    string inDt = "";
    bool isIntakeFormAssigned = false;

    public string getPercentCompletion(int surveyId, int childId, string url)
    {

        var rrr = "";
        string percentage = "0%", schInfo = "";

        if (dsChildrenSchedules != null && dsChildrenSchedules.Tables != null && dsChildrenSchedules.Tables[0] != null && dsChildrenSchedules.Tables[0].Rows != null)
        {
            for (int i = 0; i < 2; i++)
            {
                string newInfo = getExactInfo(i, surveyId, childId, percentage, rrr, url);
                schInfo = (newInfo == "" && i == 1 ? "<span style='width:125px;float:right;' class='_SHOW_'>&nbsp;</span>" : newInfo) + schInfo;
            }

        }

        return schInfo;
    }

    public string getExactInfo(int index, int surveyId, int childId, string percentage, string rrr, string url)
    {
        string info = "";
        string condition = " AND ScheduleId" + (role == "Student" ? "Child" : role) + " IS NOT NULL";
        DataRow[] drSchedules = dsChildrenSchedules.Tables[index].Select("SurveyId = " + surveyId + " AND ChildId = " + childId + "" + condition);

        int i = 0;
        foreach (DataRow drSchedule in drSchedules)
        {
            if (i < 1)
            {
                DateTime endDate = drSchedule["ScheuleEndDate"] != DBNull.Value ? Convert.ToDateTime(drSchedule["ScheuleEndDate"]) : DateTime.MinValue;
                int schId = 0;
                schId = drSchedule["ScheduleId" + (role == "Student" ? "Child" : role)] != DBNull.Value ? Convert.ToInt32(drSchedule["ScheduleId" + (role == "Student" ? "Child" : role)]) : 0;

                if (endDate != DateTime.MinValue)
                {
                    percentage = "0%";
                    if (dsQuestionsFilled != null && dsQuestionsFilled.Tables != null && dsQuestionsFilled.Tables[0] != null && dsQuestionsFilled.Tables[0].Rows != null)
                    {
                        DataRow[] drQuestions = dsQuestionsFilled.Tables[0].Select("SurveyID = " + surveyId + " AND ChildID = " + childId + " AND ScheduleDate = '" + endDate.ToString("MM/dd/yyyy") + "'");
                        foreach (DataRow dr in drQuestions)
                        {
                            percentage = dr["Percentage"] != DBNull.Value ? dr["Percentage"].ToString() : percentage;
                        }

                        if (index == 0 && percentage == "0%" && (surveyId == 7 || surveyId == 8 || surveyId == 9))
                        {
                            //should it go to one step previous or all the way to first one
                            DataRow[] drAlternativeQuestions = dsQuestionsFilled.Tables[0].Select("SurveyID = " + (surveyId - 1) + " AND ChildID = " + childId + " AND ScheduleDate = '" + endDate.ToString("MM/dd/yyyy") + "'", " ScheduleDate DESC");
                            if (drAlternativeQuestions.Length > 0)
                            {
                                percentage = drAlternativeQuestions[0]["Percentage"] != DBNull.Value ? drAlternativeQuestions[0]["Percentage"].ToString() : percentage;
                                endDate = drAlternativeQuestions[0]["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(drAlternativeQuestions[0]["ScheduleDate"]) : DateTime.MinValue;
                            }
                        }
                    }

                    if (surveyId == 16 || surveyId == 43)
                    {
                        inPer = percentage;
                        if (inPer == "100%")
                        {
                            inDt = (endDate != null && endDate != DateTime.MinValue ? endDate.ToString("MM/dd/yyyy") : "");
                        }
                    }


                    string cssClass = endDate >= DateTime.Now ? "tres" : "dos";
                    int stdStatus = drSchedule["StudyStatus"] != DBNull.Value ? Convert.ToInt32(drSchedule["StudyStatus"]) : 0;
                    int studyId = drSchedule["StudyId"] != DBNull.Value ? Convert.ToInt32(drSchedule["StudyId"]) : 0;
                    string urlForSurvey = stdStatus == 1 ? (url + "&perioddate=" + endDate.ToString("MM/dd/yyyy") + "&schid=" + schId + "&stdid=" + studyId) : "javascript:void(0);";
                    int percInt = Convert.ToInt32(percentage.Replace("%", ""));
                    info = (rrr != "" ? "" : "&nbsp;&nbsp;&nbsp;&nbsp;") + "<a data-toggle='tooltip' class='" + (percInt < 50 ? "lowFilled" : (percInt < 100 && percInt > 50 ? "medFilled" : "")) + (stdStatus == 1 ? "" : " locked") + "' href='" + urlForSurvey + "' title='" + (stdStatus == 1 ? (index == 0 ? "Previously Due" : "Currently Due") : "This survey is locked because the study is not active now.") + "'><span class='" + (rrr != "" ? "" : "schedule " + cssClass) + "'>" + (rrr != "" ? rrr : endDate.ToString("MMM dd, y")) + "</span>&nbsp;-&nbsp;<span class='percent'>" + percentage + "</span></a>";
                }
                i++;
            }
        }
        return info;
    }

    public string getIntakeCompletion(int childId, string url, int surveyId)
    {
        string comp = "";

        if (dsQuestionsFilled != null && dsQuestionsFilled.Tables.Count > 1 && dsQuestionsFilled.Tables[1].Rows.Count > 0)
        {

            DataRow[] drSchedules = dsQuestionsFilled.Tables[1].Select("SurveyId = " + surveyId + " AND ChildId = " + childId);
            foreach (DataRow dr in drSchedules)
            {
                string percentage = dr["Percentage"] != DBNull.Value ? dr["Percentage"].ToString() : "0%";
                inPer = percentage;
                if (inPer == "100%")
                {
                    inDt = (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString() : "");
                }
                string urlForSurvey = url + "&perioddate=" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString() : "");
                comp += "&nbsp;&nbsp;&nbsp;&nbsp;<a style='color: #000;' data-toggle='tooltip' href='" + urlForSurvey + "'><span class='schedule'>" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MMM dd, y") : "") + "</span>&nbsp;-&nbsp;<span class='percent'>" + percentage + "</span></a>";
            }
        }

        return comp;
    }


    public bool checkDateValidity(string date)
    {
        bool isValidDate = false;
        DateTime dtEvent;
        if (DateTime.TryParse(date, out dtEvent))
        {
            isValidDate = true;
        }

        return isValidDate;
    }

    public bool showHideSurvey(string dates)
    {
        if (dates == "" || (dates.ToLower().Contains("_SHOW_") == false && dates.ToLower().Contains("</a>") == false))
        {
            return false;
        }

        return true;
    }

    public string getViewHistoryLink(int childID, int surveyId)
    {
        return "<a class='viewhistory' target='_blank' href='" + @Url.Action("SurveyHistory", "UserQuestion") + "?childId=" + childID + "&surveyId=" + surveyId + "\'>View History</a>";
    }
}
@if (childID > 0)
{
    <link href="~/Content/scroller/jquery.mCustomScrollbar.min.css" rel="stylesheet" />
    <script src="~/Content/scroller/jquery.mCustomScrollbar.concat.min.js"></script>
    <style type="text/css">
        .childDetailsDiv .boxitem {
            padding: 0px;
            color: #ffffff;
            margin-bottom: 10px;
        }

            .childDetailsDiv .boxitem .boxheading {
                padding: 5px 5px 5px 32px;
                color: #ffffff;
                text-align: center;
                position: relative;
                text-align: left;
            }

            .childDetailsDiv .boxitem .content {
                height: 200px;
            }

        .childDetailsDiv .locked,
        .childDetailsDiv .locked span {
            background-color: #CCC;
        }
    </style>

    <style type="text/css">
        .col-centered {
            float: none;
            margin: 0 auto;
        }

        .schedule {
            width: 60px;
            text-align: center;
            font-style: italic;
            text-decoration: underline;
        }

            .schedule.onu {
                color: #929292;
            }

            .schedule.dos {
                color: #aaaaaa;
            }

            .schedule.tres {
                color: #6260ca;
            }

        .percent {
            font-style: italic;
            display: inline-block;
            width: 25px;
            font-weight: bold;
        }

        .lowFilled span {
            color: #DE0000 !important;
        }

        .medFilled span {
            color: #ff002d !important;
        }

        .text-left {
            text-align: left;
            padding-left: 7px;
        }

        .surveyList {
            color: #000000;
            font-size: 14px;
        }

            .surveyList div a {
                display: block;
                float: right;
                width: 125px;
                text-align: right;
            }

                .surveyList div a.viewhistory {
                    float: none;
                    display: inline-block;
                    color: #337ab7;
                    text-decoration: underline;
                    width: 90px;
                    text-align: left;
                    margin-left: 10px;
                }

            .surveyList div {
                border-bottom: dotted 1px #cccccc;
                padding: 6px;
            }

        .btnAdd {
            -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.36), 0 2px 10px 0 rgba(0, 0, 0, 0.24);
            -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.36), 0 2px 10px 0 rgba(0, 0, 0, 0.24);
            box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.36), 0 2px 10px 0 rgba(0, 0, 0, 0.24);
            opacity: 0.96;
            padding: 0px 10px;
            color: #FFF;
        }

        .intake a {
            color: #ffffff;
            font-style: normal !important;
            display: block;
            text-decoration: underline;
            padding: 3px;
        }

            .intake a:hover {
                background: rgba(255,255,255,.1);
            }

        .btnViewMore {
            padding: 0px 6px;
            display: inline-block;
            color: #FFF;
            float: right;
            border: solid 1px #FFF;
            background-color: #666;
            text-decoration: none;
            margin-top: 7px;
            margin-top: 2px;
        }

            .btnViewMore:hover {
                padding: 0px 6px;
                display: inline-block;
                color: #FFF;
                float: right;
                border: solid 1px #FFF;
                background-color: #666;
                text-decoration: none;
                margin-top: 7px;
                margin-top: 2px;
            }

        a.redCrossInItem {
            width: 20px;
            height: 20px;
            position: absolute;
            right: 4px;
            top: -6px;
            font-size: 18px;
        }

            a.redCrossInItem:hover, a.redCrossInItem:visited {
                font-size: 19px !important;
            }

        .ui-tooltip { /*min-width:300px;*/
            background-color: #333;
            color: #FFF;
        }
    </style>

    <div style="margin: 0px 0px 20px 0px;" class="childDetailsDiv">
        <table cellpadding="0" cellspacing="0" style="width:100%;">
            <tr>
                <td style="width: @(role != "Student" ? "60%" : "100%");vertical-align:top;padding-right: 12px;">
                    <div class="panel-group surveys">

                        @if (dschild.Tables[0].Rows.Count > 0)
                        {
                            foreach (System.Data.DataRow drch in dschild.Tables[0].Rows)
                            {

                                var url = Url.Action("Question", "UserQuestion", new { surveyID = "__", ChildId = drch["ID"].ToString(), ChildName = drch["Name"].ToString() });
                                DateTime today = DateTime.Today;
                                DateTime dob = (DateTime)drch["DOB"];
                                int age = today.Year - dob.Year;

                                if (dob > today.AddYears(-age)) { age--; }

                                <div class="surveyList">
                                    <div class="col-md-12" style="font-size:14px;border-bottom:solid 2px #000000;"><i class="ion-clipboard"></i>&nbsp;Questionnaires&nbsp;(@childName)<a href="javascript:void(0);" style="text-decoration:none !important;background-color:#FFF !important;cursor:default;color: #00ADEE;font-weight: bold;">Currently Due</a><a href="javascript:void(0);" style="text-decoration:none !important;background-color:#FFF !important;cursor:default;color: #00ADEE;font-weight: bold;">Previously Due</a></div>
                                    @if (roles[0] != "Teacher")
                                    {
                                        if (schoolId == 1)
                                        {
                                            string percentGen = getPercentCompletion((int)Questionnaire.Parent_Intake_Form_OHS, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Parent_Intake_Form_OHS).ToString()));
                                            if (showHideSurvey(percentGen) == true)
                                            {
                                                <div class="col-md-12 text-left" style="background-color: #c7dbff;padding: 6px 6px;"><i class="ion-flag" style="font-size: 16px;vertical-align: middle;"></i>&nbsp;Parent Intake Form (OHS)@(Html.Raw(percentGen))</div>
                                            }
                                        }
                                        if (schoolId == 2)
                                        {
                                            string percentGenCAS = getPercentCompletion((int)Questionnaire.Intake_Form_CAS, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Intake_Form_CAS).ToString()));
                                            if (showHideSurvey(percentGenCAS) == true)
                                            {
                                                <div class="col-md-12 text-left" style="background-color: #c7dbff;padding: 6px 6px;"><i class="ion-flag" style="font-size: 16px;vertical-align: middle;"></i>&nbsp;Parent Intake Form (CAS)@(Html.Raw(percentGenCAS))</div>
                                            }
                                        }
                                        if (schoolId == 21)
                                        {
                                            string percentAAIntake = getPercentCompletion((int)Questionnaire.Intake_Form_Athena_Academy, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Intake_Form_Athena_Academy).ToString()));
                                            if (showHideSurvey(percentAAIntake) == true)
                                            {
                                                <div class="col-md-12 text-left" style="background-color: #c7dbff;padding: 6px 6px;"><i class="ion-flag" style="font-size: 16px;vertical-align: middle;"></i>&nbsp;Parent Intake Form (Athena Academy)@(Html.Raw(percentAAIntake))</div>
                                            }
                                        }
                                        var casParent = getPercentCompletion((int)Questionnaire.CAS_Grit_and_Resilience_Parent, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CAS_Grit_and_Resilience_Parent).ToString()));
                                        if (showHideSurvey(casParent) == true)
                                        {
                                                <div class="col-md-12 text-left">CAS Grit and Resilience - Parent&nbsp;@(Html.Raw(casParent))</div>
                                        }
                                        var scasp = getPercentCompletion((int)Questionnaire.SCAS_Parent, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.SCAS_Parent).ToString()));
                                        if (showHideSurvey(scasp) == true)
                                        {
                                            <div class="col-md-12 text-left">SCAS - Parent&nbsp;@(Html.Raw(scasp))</div>
                                        }
                                    }
                                    @if (roles[0] == "Teacher")
                                    {

                                        var strLanComunication = getPercentCompletion((int)Questionnaire.Weekly_Teacher, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Weekly_Teacher).ToString()));
                                        if (showHideSurvey(strLanComunication) == true)
                                        {
                                            <div class="col-md-12 text-left">Weekly - Language and Communication, Behavior, Daily Learning &nbsp;@(Html.Raw(strLanComunication))</div>
                                        }
                                        var acadmicprogrss = getPercentCompletion((int)Questionnaire.Academic_Progress_Rating_Scales, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Academic_Progress_Rating_Scales).ToString()));
                                        if (showHideSurvey(acadmicprogrss) == true)
                                        {
                                            <div class="col-md-12 text-left">Academic Progress Rating Scales&nbsp;@(Html.Raw(acadmicprogrss))</div>
                                        }

                                        var academicProgressAthena = getPercentCompletion((int)Questionnaire.Academic_Progress_Scale_For_Athena_Academy, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Academic_Progress_Scale_For_Athena_Academy).ToString()));
                                        if (showHideSurvey(academicProgressAthena) == true)
                                        {
                                            <div class="col-md-12 text-left">Academic Progress Scale for Athena Academy&nbsp;@(Html.Raw(academicProgressAthena))</div>
                                        }

                                        var testReportCard = getPercentCompletion((int)Questionnaire.CAS_Grit_and_Resilience_Scale, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CAS_Grit_and_Resilience_Scale).ToString()));
                                        if (showHideSurvey(testReportCard) == true)
                                        {
                                            <div class="col-md-12 text-left">CAS Grit and Resilience Scale&nbsp;@(Html.Raw(testReportCard))</div>
                                        }
                                        var vinelandTeacher = getPercentCompletion((int)Questionnaire.Vineland_3_Teacher, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Vineland_3_Teacher).ToString()));
                                        if (showHideSurvey(vinelandTeacher) == true)
                                        {
                                            <div class="col-md-12 text-left">Vineland-3 (Teacher)&nbsp;@(Html.Raw(vinelandTeacher))</div>
                                        }
                                        var qTeacherReport = getPercentCompletion((int)Questionnaire.School_Anxiety_Scale_Teacher_Report, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.School_Anxiety_Scale_Teacher_Report).ToString()));
                                        if (showHideSurvey(qTeacherReport) == true)
                                        {
                                            <div class="col-md-12 text-left">School Anxiety Scale – Teacher Report&nbsp;@(Html.Raw(qTeacherReport))</div>
                                        }
                                        var qCGITeacher = getPercentCompletion((int)Questionnaire.CGI_I_Teacher_Rating, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CGI_I_Teacher_Rating).ToString()));
                                        if (showHideSurvey(qCGITeacher) == true)
                                        {
                                            <div class="col-md-12 text-left">CGI-I: Teacher Rating&nbsp;@(Html.Raw(qCGITeacher))</div>
                                        }

                                        var ssist = getPercentCompletion((int)Questionnaire.Social_Skills_Improvement_System_Teacher, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Social_Skills_Improvement_System_Teacher).ToString()));
                                        if (showHideSurvey(ssist) == true)
                                        {
                                            <div class="col-md-12 text-left">Social Skills Improvement System (Teacher)&nbsp;@(Html.Raw(ssist))</div>
                                        }

                                        var scast = getPercentCompletion((int)Questionnaire.SCAS_Teacher, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.SCAS_Teacher).ToString()));
                                        if (showHideSurvey(scast) == true)
                                        {
                                            <div class="col-md-12 text-left">SCAS - Teacher&nbsp;@(Html.Raw(scast))</div>
                                        }
                                    }
                                    @{
                                        var abbsensoryprofile = getPercentCompletion((int)Questionnaire.Abbreviated_sensory_profile, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Abbreviated_sensory_profile).ToString()));
                                        if (showHideSurvey(abbsensoryprofile) == true)
                                        {
                                            <div class="col-md-12 text-left">Abbreviated sensory profile &nbsp;@(Html.Raw(abbsensoryprofile))</div>

                                        }
                                        var CaregiverQuestionair = getPercentCompletion((int)Questionnaire.Caregiver_Strain_Questionnaire, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Caregiver_Strain_Questionnaire).ToString()));
                                        if (showHideSurvey(CaregiverQuestionair) == true)
                                        {
                                            <div class="col-md-12 text-left">Caregiver Strain Questionnaire&nbsp;@(Html.Raw(CaregiverQuestionair))</div>
                                        }
                                        var GISeverityIndex = getPercentCompletion((int)Questionnaire.GI_Severity_Index, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.GI_Severity_Index).ToString()));
                                        if (showHideSurvey(GISeverityIndex) == true)
                                        {
                                            <div class="col-md-12 text-left">GI Severity Index &nbsp;@(Html.Raw(GISeverityIndex))</div>
                                        }
                                        var abbehaviourchk = getPercentCompletion((int)Questionnaire.Aberrant_Behavior_Checklist, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Aberrant_Behavior_Checklist).ToString()));
                                        if (showHideSurvey(abbehaviourchk) == true)
                                        {
                                            <div class="col-md-12 text-left">Aberrant Behavior Checklist&nbsp;@(Html.Raw(abbehaviourchk))</div>
                                        }

                                        var socialResponsivenies = getPercentCompletion((int)Questionnaire.Social_Responsiveness_Scale, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Social_Responsiveness_Scale).ToString()));
                                        if (showHideSurvey(socialResponsivenies) == true)
                                        {
                                            <div class="col-md-12 text-left">Social Responsiveness Scale&nbsp;@(Html.Raw(socialResponsivenies))</div>
                                        }

                                        if (age <= 4)
                                        {
                                            var pedsqty = getPercentCompletion((int)Questionnaire.Peds_quality_of_life_6, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Peds_quality_of_life_6).ToString()));
                                            if (showHideSurvey(pedsqty) == true)
                                            {
                                            <div class="col-md-12 text-left">Peds quality of life for 2yrs-4yrs&nbsp;@(Html.Raw(pedsqty))</div>
                                            }
                                        }
                                        else if (age <= 7 && age >= 5)
                                        {
                                            var pdsqtylife = getPercentCompletion((int)Questionnaire.Peds_quality_of_life_7, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Peds_quality_of_life_7).ToString()));
                                            if (showHideSurvey(pdsqtylife) == true)
                                            {
                                            <div class="col-md-12 text-left">Peds quality of life for 5yrs-7yrs&nbsp;@(Html.Raw(pdsqtylife))</div>
                                            }
                                        }
                                        else if (age <= 12 && age >= 8)
                                        {
                                            var pdsqty8yr = getPercentCompletion((int)Questionnaire.Peds_quality_of_life_8, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Peds_quality_of_life_8).ToString()));
                                            if (showHideSurvey(pdsqty8yr) == true)
                                            {
                                            <div class="col-md-12 text-left">Peds quality of life for 8yrs -12yrs&nbsp;@(Html.Raw(pdsqty8yr))</div>
                                            }

                                            var ssis812 = getPercentCompletion((int)Questionnaire.Social_Skills_Improvement_System_62, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Social_Skills_Improvement_System_62).ToString()));
                                            if (showHideSurvey(ssis812) == true)
                                            {
                                            <div class="col-md-12 text-left">Social Skills Improvement System for 8yrs -12yrs&nbsp;@(Html.Raw(ssis812))</div>
                                            }
                                        }
                                        else if (age >= 13 && age <= 18)
                                        {
                                            var pdsqty13year = getPercentCompletion((int)Questionnaire.Peds_quality_of_life_9, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Peds_quality_of_life_9).ToString()));
                                            if (showHideSurvey(pdsqty13year) == true)
                                            {
                                            <div class="col-md-12 text-left">Peds quality of life for 13yrs -18yrs&nbsp;@(Html.Raw(pdsqty13year))</div>
                                            }


                                            var ssis1318 = getPercentCompletion((int)Questionnaire.Social_Skills_Improvement_System_63, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Social_Skills_Improvement_System_63).ToString()));
                                            if (showHideSurvey(ssis1318) == true)
                                            {
                                            <div class="col-md-12 text-left">Social Skills Improvement System for 13yrs -18yrs&nbsp;@(Html.Raw(ssis1318))</div>
                                            }
                                        }
                                        else if (age >= 19)
                                        {
                                            var pdsqty19year = getPercentCompletion((int)Questionnaire.Peds_quality_of_life, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Peds_quality_of_life).ToString()));
                                            if (showHideSurvey(pdsqty19year) == true)
                                            {
                                            <div class="col-md-12 text-left">Peds quality of life for 19yrs and older&nbsp;@(Html.Raw(pdsqty19year))</div>
                                            }
                                        }
                                        var shrtlngprofile = getPercentCompletion((int)Questionnaire.Short_language_profile, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Short_language_profile).ToString()));
                                        if (showHideSurvey(shrtlngprofile) == true)
                                        {
                                            <div class="col-md-12 text-left">Short language profile &nbsp;@(Html.Raw(shrtlngprofile))</div>
                                        }
                                        var socialcommqstions = getPercentCompletion((int)Questionnaire.Social_communication_Questionnaire_life_time, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Social_communication_Questionnaire_life_time).ToString()));
                                        if (showHideSurvey(socialcommqstions) == true)
                                        {
                                            <div class="col-md-12 text-left">Social communication Questionnaire – life time&nbsp;@(Html.Raw(socialcommqstions))</div>
                                        }
                                        var Insomniaseverity = getPercentCompletion((int)Questionnaire.Insomnia_Severity_Index, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Insomnia_Severity_Index).ToString()));
                                        if (showHideSurvey(Insomniaseverity) == true)
                                        {
                                            <div class="col-md-12 text-left">Insomnia Severity Index&nbsp;@(Html.Raw(Insomniaseverity))</div>
                                        }
                                        var connordavidson = getPercentCompletion((int)Questionnaire.Connor_Davidson_Resilience_Scale_10, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Connor_Davidson_Resilience_Scale_10).ToString()));
                                        if (showHideSurvey(connordavidson) == true)
                                        {
                                            <div class="col-md-12 text-left">Connor-Davidson Resilience Scale 10&nbsp;@(Html.Raw(connordavidson))</div>
                                        }

                                        var familyempowermentscale = getPercentCompletion((int)Questionnaire.Family_Empowerment_Scale, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Family_Empowerment_Scale).ToString()));
                                        if (showHideSurvey(familyempowermentscale) == true)
                                        {
                                            <div class="col-md-12 text-left">Family Empowerment Scale&nbsp;@(Html.Raw(familyempowermentscale))</div>
                                        }

                                        var feedbackquestionair = getPercentCompletion((int)Questionnaire.Feedback_Questionnaire, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Feedback_Questionnaire).ToString()));
                                        if (showHideSurvey(feedbackquestionair) == true)
                                        {
                                            <div class="col-md-4 text-left" style="display:none;">Feedback Questionnaire&nbsp;@(Html.Raw(feedbackquestionair))</div>

                                        }

                                        var monthlyTeacher = getPercentCompletion((int)Questionnaire.Monthly_Teacher, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Monthly_Teacher).ToString()));
                                        if (showHideSurvey(monthlyTeacher) == true)
                                        {
                                            <div class="col-md-12 text-left">Monthly Teacher&nbsp;@(Html.Raw(monthlyTeacher))</div>
                                        }

                                        var vanderbilt = getPercentCompletion((int)Questionnaire.Vanderbilt_ADHD_Diagnostic_Teacher_Rating_Scale, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Vanderbilt_ADHD_Diagnostic_Teacher_Rating_Scale).ToString()));
                                        if (showHideSurvey(vanderbilt) == true)
                                        {
                                            <div class="col-md-12 text-left">Vanderbilt Adhd Diagnostic Teacher Rating Scale&nbsp;@(Html.Raw(vanderbilt))</div>
                                        }
                                        var pvanderbilt = getPercentCompletion((int)Questionnaire.Vanderbilt_ADHD_Scale_Parent, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Vanderbilt_ADHD_Scale_Parent).ToString()));
                                        if (showHideSurvey(pvanderbilt) == true)
                                        {
                                            <div class="col-md-12 text-left">Vanderbilt ADHD Scale – Parent&nbsp;@(Html.Raw(pvanderbilt))</div>
                                        }

                                        var anxiety = getPercentCompletion((int)Questionnaire.Anxiety_Depression_and_Mood_Scale, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Anxiety_Depression_and_Mood_Scale).ToString()));
                                        if (showHideSurvey(anxiety) == true)
                                        {
                                            <div class="col-md-12 text-left">Anxiety Depression and Mood Scale&nbsp;@(Html.Raw(anxiety))</div>
                                        }

                                        var pas = getPercentCompletion((int)Questionnaire.Parent_Assessment_Summary, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Parent_Assessment_Summary).ToString()));
                                        if (showHideSurvey(pas) == true)
                                        {
                                            <div class="col-md-12 text-left">Parent Assessment Summary&nbsp;@(Html.Raw(pas))</div>
                                        }
                                        var qTeacher = getPercentCompletion((int)Questionnaire.CAS_Academic_Progress_Reading_and_Writing, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CAS_Academic_Progress_Reading_and_Writing).ToString()));
                                        if (showHideSurvey(qTeacher) == true)
                                        {
                                            <div class="col-md-12 text-left">CAS Academic Progress: Reading and Writing&nbsp;@(Html.Raw(qTeacher))</div>
                                        }
                                        var qTeacherMath = getPercentCompletion((int)Questionnaire.CAS_Academic_Progress_Math_and_Science, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CAS_Academic_Progress_Math_and_Science).ToString()));
                                        if (showHideSurvey(qTeacherMath) == true)
                                        {
                                            <div class="col-md-12 text-left">CAS Academic Progress: Math and Science&nbsp;@(Html.Raw(qTeacherMath))</div>
                                        }
                                        var qTeacherSkills = getPercentCompletion((int)Questionnaire.CAS_Academic_Progress_Other_Skills, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CAS_Academic_Progress_Other_Skills).ToString()));
                                        if (showHideSurvey(qTeacherSkills) == true)
                                        {
                                            <div class="col-md-12 text-left">CAS Academic Progress: Other Skills&nbsp;@(Html.Raw(qTeacherSkills))</div>
                                        }

                                        if (age <= 10)
                                        {
                                            var qStrengths = getPercentCompletion((int)Questionnaire.Strengths_and_Difficulties_Questionnaire_51, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Strengths_and_Difficulties_Questionnaire_51).ToString()));
                                            if (showHideSurvey(qStrengths) == true)
                                            {
                                            <div class="col-md-12 text-left">Strengths and Difficulties Questionnaire for 4yrs -10yrs&nbsp;@(Html.Raw(qStrengths))</div>
                                            }
                                        }
                                        else if (age >= 11)
                                        {
                                            var qStrengths1117 = getPercentCompletion((int)Questionnaire.Strengths_and_Difficulties_Questionnaire_52, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Strengths_and_Difficulties_Questionnaire_52).ToString()));
                                            if (showHideSurvey(qStrengths1117) == true)
                                            {
                                            <div class="col-md-12 text-left">Strengths and Difficulties Questionnaire for 11yrs -17yrs&nbsp;@(Html.Raw(qStrengths1117))</div>
                                            }
                                        }

                                        var qCGISelf = getPercentCompletion((int)Questionnaire.CGI_I_Self_Rating, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CGI_I_Self_Rating).ToString()));
                                        if (showHideSurvey(qCGISelf) == true)
                                        {
                                            <div class="col-md-12 text-left">CGI-I: Self-Rating&nbsp;@(Html.Raw(qCGISelf))</div>
                                        }

                                        var qLifeUpdate = getPercentCompletion((int)Questionnaire.Life_Update, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Life_Update).ToString()));
                                        if (showHideSurvey(qLifeUpdate) == true)
                                        {
                                            <div class="col-md-12 text-left">Life Update&nbsp;@(Html.Raw(qLifeUpdate))</div>
                                        }

                                        var InterventionsUpdate = getPercentCompletion((int)Questionnaire.Interventions_Update, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Interventions_Update).ToString()));
                                        if (showHideSurvey(InterventionsUpdate) == true)
                                        {
                                            <div class="col-md-12 text-left">Interventions Update&nbsp;@(Html.Raw(InterventionsUpdate))</div>
                                        }
                                        var mood = getPercentCompletion((int)Questionnaire.Mood_And_Feelings_Qestionnaire_Short_Version, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Mood_And_Feelings_Qestionnaire_Short_Version).ToString()));
                                        if (showHideSurvey(mood) == true)
                                        {
                                            <div class="col-md-12 text-left">Mood And Feelings Qestionnaire: Short Version&nbsp;@(Html.Raw(mood))</div>
                                        }
                                    }

                                    @if (roles[0] != "Teacher")
                                    {
                                        @*string percentGen = getIntakeCompletion((int)drch["ID"], url.Replace("__", "16"));
                                            if (!String.IsNullOrEmpty(percentGen))
                                            {
                                                <div class="col-md-12 text-left">Parent Intake Form (OHS)@(Html.Raw(percentGen))</div>
                                            }*@

                                        @*string percentM = getPercentCompletion(21, (int)drch["ID"], url.Replace("__", "21"));
                                            if (!String.IsNullOrEmpty(percentM))
                                            {
                                                <div class="col-md-12 text-left">Parent Follow-Up Form (OHS)@(Html.Raw(percentM))</div>
                                            }*@
                                        var vinelandParent = getPercentCompletion((int)Questionnaire.Vineland_3_Parent, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Vineland_3_Parent).ToString()));
                                        if (showHideSurvey(vinelandParent) == true)
                                        {
                                            <div class="col-md-12 text-left">Vineland-3 (Parent)&nbsp;@(Html.Raw(vinelandParent))</div>
                                        }
                                        var qCGIParent = getPercentCompletion((int)Questionnaire.CGI_I_Caregiver_Rating, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.CGI_I_Caregiver_Rating).ToString()));
                                        if (showHideSurvey(qCGIParent) == true)
                                        {
                                            <div class="col-md-12 text-left">CGI-I: Caregiver Rating&nbsp;@(Html.Raw(qCGIParent))</div>
                                        }
                                        var ssisp = getPercentCompletion((int)Questionnaire.Social_Skills_Improvement_System_Parent, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Social_Skills_Improvement_System_Parent).ToString()));
                                        if (showHideSurvey(ssisp) == true)
                                        {
                                            <div class="col-md-12 text-left">Social Skills Improvement System (Parent)&nbsp;@(Html.Raw(ssisp))</div>
                                        }
                                    }

                                    @if (roles[0] == "Parent")
                                    {
                                        var rcads = getPercentCompletion((int)Questionnaire.Revised_Childrens_Anxiety_and_Depression_Scale_RCADS_25, (int)drch["ID"], url.Replace("__", ((int)Questionnaire.Revised_Childrens_Anxiety_and_Depression_Scale_RCADS_25).ToString()));
                                        if (showHideSurvey(rcads) == true)
                                        {
                                            <div class="col-md-12 text-left">Revised Children’s Anxiety and Depression Scale (RCADS-25)&nbsp;@(Html.Raw(rcads))</div>
                                        }
                                    }
                                </div>
                                <div class="col-sm-5">


                                    @*
                                        <div class="col-md-4 text-left">Adverse Reaction@(Html.Raw(getPercentCompletion(28, (int)drch["ID"], url.Replace("__", "28"))))</div>
                                        <div class="col-md-4 text-left">Life Events@(Html.Raw(getPercentCompletion(29, (int)drch["ID"], url.Replace("__", "29"))))</div>*@

                                </div>

                            }
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <strong>Info!</strong>No child is assosisated with this @roles[0]
                            </div>
                        }
                    </div>
                </td>
                @if (role != "Student")
                {
                    <td style="vertical-align:top;">
                        <div style="font-size:14px;border-bottom:solid 2px #000000;margin-bottom: 5px;padding: 16px;">@*<i class="fa fa-history"></i>&nbsp;Child Statistics&nbsp;(@childName)*@</div>

                        <div class="col-md-12 text-left adverse boxitem" style="background: rgb(235, 99, 87);">
                            <div class="boxheading" style="background: #E14C3E;">
                                <i class="ion-nuclear" style="position:absolute;top:7px;left:12px;font-size:16px;"></i> Adverse Reactions
                                <span style="float: right;"><a class="btnAdd btn btn-link" style="color:#FFF;" href="@Url.Action("Question", "UserQuestion", new { surveyID = 28, ChildId = childID, ChildName = childName })">Add</a></span>
                            </div>
                            <div style="padding: 5px 5px 5px 5px;overflow:hidden; font-size: 12px;" class="content mCustomScrollbar adversereactions">
                                @if (dsReveseandLiveEvent.Tables[0].Rows.Count > 0)
                                {
                                    int indexAR = 1;
                                    foreach (System.Data.DataRow dr in dsReveseandLiveEvent.Tables[0].Rows)
                                    {
                                        <div id="ad@(indexAR)" indexer="@indexAR" style="padding:4px 4px 4px 4px;border-bottom:solid 1px rgba(0, 0, 0, 0.12);margin-bottom:5px;@(dr["DateResolved"] != DBNull.Value && Convert.ToDateTime(dr["DateResolved"]) < DateTime.Now ? "color: #111;" : "")@(indexAR > 5 ? "display:none;" : "")" class="item">
                                            <div style="overflow:hidden;position:relative;" title='@dr["AdverseReaction"] _NEWLINE_ Occured on: @dr["DateOccured"] _NEWLINE_ Resolved on: @dr["DateResolved"] _NEWLINE_ Medication: @dr["Medication"] _NEWLINE_ Started on: @dr["DateStart"] _NEWLINE_ Ended on: @dr["DateEnd"]' data-toggle='tooltip'>
                                                <div style="float:left;text-transform:capitalize;"><b>@dr["AdverseReaction"]</b> occured on <b>@dr["DateOccured"]</b> and resolved on <b>@dr["DateResolved"]</b> by using <b>@dr["Medication"]</b></div>
                                                <span><a href="javascript:void(0);" class="redCrossInItem" onclick="event.stopPropagation();deleteListItem(this, @dr["Id"], 'adversereaction', '@dr["AdverseReaction"]', function(){ location.reload(true); });"><i class="ion-close" style="color:#FFF;"></i></a></span>
                                            </div>
                                        </div>
                                        indexAR++;
                                    }
                                    if (indexAR > 6)
                                    {
                                        <div class="viewMore"><a herf="javascript:void(0);" class="btnViewMore btn btn-link" type="1" onclick="viewMore(this, 3);">View More&nbsp;<i class="ion-chevron-down"></i></a></div>
                                    }
                                }
                                else
                                {
                                    <div style="color:#FFF;text-align:center;"> No history found</div>
                                }
                            </div>
                        </div>

                        <div style="clear:both;"></div>

                        <div class="col-md-@(roles[0] == "Parent" && inPer == "" ? "12" : "6") text-left lifeevents boxitem" style="background: rgb(151, 201, 93) ;">
                            <div class="boxheading" style="background: rgb(139, 195, 74);">
                                <i class="ion-android-calendar" style="position: absolute; top: 7px; left: 12px; font-size: 16px;"></i>Life Events <span style="float: right;"><a class="btnAdd btn btn-link" style="color:#FFF;" href="@Url.Action("Question", "UserQuestion", new { surveyID = 29, ChildId = childID, ChildName = childName })">Add</a></span>
                            </div>
                            <div style="padding: 5px;overflow: hidden; font-size: 12px;" class="content mCustomScrollbar levents">
                                @if (dsReveseandLiveEvent.Tables[1].Rows.Count > 0)
                                {
                                    int indexLE = 1;
                                    foreach (System.Data.DataRow dr in dsReveseandLiveEvent.Tables[1].Rows)
                                    {
                                        <div indexer="@indexLE" style="padding:4px 4px 4px 4px;border-bottom:solid 1px rgba(0, 0, 0, 0.12);margin-bottom:5px;@(indexLE > 5 ? "display:none;" : "")" class="event item">
                                            @*<div style="text-transform:capitalize;"><b>@dr["EventCategory"]</b></div>*@
                                            <div style="overflow:hidden;position:relative;@( @dr["EventName"].ToString() == "" ? "display:none;" : "") " title="@dr["EventCategory"]" data-toggle='tooltip'>
                                                <div style="float:left;font-weight:bold;">@dr["EventName"]</div><br />
                                                <div style="text-align:right;float:left;text-align:left;@(@dr["EventDate"].ToString() == "" ? "display:none;" : "") ">
                                                    Started: @dr["EventDate"]
                                                    @if (dr["EventEndDate"] != DBNull.Value && string.IsNullOrEmpty(dr["EventEndDate"].ToString()) == false)
                                                    {
                                                        <span>, Ended: @dr["EventEndDate"]</span>
                                                    }
                                                </div>
                                                <a href="javascript:void(0);" class="redCrossInItem" onclick="event.stopPropagation();deleteListItem(this, @dr["ID"], 'lifeevent', '@dr["EventName"]', function(){ location.reload(true); });"><i class="ion-close" style="color:#FFF;"></i></a>
                                            </div>
                                        </div>
                                        indexLE++;
                                    }
                                    if (indexLE > 6)
                                    {
                                        <div class="viewMore"><a herf="javascript:void(0);" class="btnViewMore btn btn-link" type="1" onclick="viewMore(this, 1);">View More&nbsp;<i class="ion-chevron-down"></i></a></div>
                                    }
                                }
                                else
                                {
                                    <div style="color:#FFF;text-align:center;">No history found</div>
                                }
                            </div>
                        </div>

                        @if ((schoolId == 1 || schoolId == 2) && inPer != "")
                        {
                            <div class="col-md-6 text-left medication boxitem" style="background: rgb(153, 153, 153);">
                                <div class="boxheading" style="background: #666666;">
                                    <i class="fa fa-medkit" style="position:absolute;top:7px;left:12px;font-size:16px;"></i>Medication History
                                    @if (roles[0] == "Parent")
                                    {
                                        <span style="float: right;"><a class="btnAdd btn btn-link" style="color:#FFF;" href="@(inPer == "100%" ? Url.Action("Question", "UserQuestion", new { surveyID = 16, ChildId = childID, ChildName = childName, perioddate = inDt, sec = 1 }) : "javascript:void(0);")" data-toggle='tooltip' title="@(inPer == "100%" ? "" : "Please complete the Intake Form first.")" onclick="@(inPer == "100%" ? "" : "bootbox.alert('Please complete the Intake Form first.');")">Update</a></span>
                                    }

                                </div>
                                <div style="padding: 5px 5px 5px 5px; overflow:hidden; font-size: 12px;" class="content mCustomScrollbar medicationhistory">
                                    @if (dsReveseandLiveEvent.Tables[2].Rows.Count > 0)
                                    {
                                        int indexMH = 1;
                                        foreach (System.Data.DataRow dr in dsReveseandLiveEvent.Tables[2].Rows)
                                        {
                                            var _qq = dr["Question"].ToString().Split('-')[1].Trim();
                                            var _aa = dr["Answers"];
                                            string[] _a = _aa.ToString().Split('|');
                                            if (_a.Length >= 5)
                                            {
                                                if (_a[2].Length > 0 || _a[3].Length > 0)
                                                {

                                                    <div indexer="@indexMH" style="padding:4px 4px 4px 4px;border-bottom:solid 1px rgba(0, 0, 0, 0.12);margin-bottom:5px;@(indexMH > 5 ? "display:none;" : "")" class="item">
                                                        <div style="overflow:hidden;" title='@_qq' data-toggle='tooltip'>
                                                            <b>@_qq (@_a[1] @_a[4])</b>
                                                            <div style="text-transform:capitalize;">on: @_a[2] - @_a[3]<br />for: @_a[5] times per @_a[6]</div>

                                                        </div>


                                                    </div>
                                                }
                                                //Indication|Dosage|02/01/2015|03/02/2015|ug|9|Hour|undefined
                                                //Indication|5|05/01/2016|05/11/2016|ul|6|Week|undefined
                                            }
                                            indexMH++;
                                        }
                                        if (indexMH > 6)
                                        {
                                            <div class="viewMore"><a herf="javascript:void(0);" class="btnViewMore btn btn-link" type="1" onclick="viewMore(this, 4);">View More&nbsp;<i class="ion-chevron-down"></i></a></div>
                                        }
                                    }
                                    else
                                    {
                                        <div style="color:#FFF;text-align:center;"> No history found</div>
                                    }
                                </div>
                            </div>
                            <div style="clear:both;"></div>
                        }


                        @if ((schoolId == 1 || schoolId == 2) && inPer != "")
                        {
                            <div class="col-md-@(roles[0] == "Teacher" ? "6" : "12") text-left treatment boxitem" style="background: #2daad8;">
                                <div class="boxheading" style="background: #0084b5;">
                                    <i class="fa fa-stethoscope" style="position: absolute; top: 7px; left: 12px; font-size: 16px;"></i>Therapies
                                    @if (roles[0] == "Parent")
                                    {
                                        <span style="float: right;"><a class="btnAdd btn btn-link" style="color:#FFF;" href="@(inPer == "100%" ? Url.Action("Question", "UserQuestion", new { surveyID = 16, ChildId = childID, ChildName = childName, perioddate = inDt, sec = 2 }) : "javascript:void(0);")" data-toggle='tooltip' title="@(inPer == "100%" ? "" : "Please complete the Intake Form first.")" onclick="@(inPer == "100%" ? "" : "bootbox.alert('Please complete the Intake Form first.');")">Update</a></span>
                                    }
                                </div>
                                <div style="padding: 5px;overflow: auto; font-size: 12px;" class="content mCustomScrollbar therapies">
                                    @if (dsReveseandLiveEvent.Tables[3].Rows.Count > 0)
                                    {
                                        int indexTherapy = 1;
                                        foreach (System.Data.DataRow dr in dsReveseandLiveEvent.Tables[3].Rows)
                                        {
                                            var _qq = dr["Question"].ToString().Trim();
                                            var _aa = dr["Answers"];
                                            string[] _a = _aa.ToString().Split('|');
                                            <div indexer="@indexTherapy" style="padding:4px 4px 4px 4px;border-bottom:solid 1px rgba(0, 0, 0, 0.12);margin-bottom:5px;@(_a[3] != "" && checkDateValidity(_a[3]) && Convert.ToDateTime(_a[3]) < DateTime.Now ? "color: #111;" : "")@(indexTherapy > 5 ? "display:none;" : "")" class="item">
                                                <div style="overflow:hidden;" title='@_qq' data-toggle='tooltip'>
                                                    <b>@_qq</b>
                                                    @if (_a.Length >= 4)
                                                    {
                                                        <div>
                                                            <b>@(String.IsNullOrEmpty(_a[0]) == false ? _a[0] : "-")</b> session(s) of <b>@(String.IsNullOrEmpty(_a[1]) == false ? _a[1] : "-")</b>
                                                            From @(String.IsNullOrEmpty(_a[2]) == false ? (_a[2].Contains("-") == true ? _a[2].Replace("-", "/") : _a[2]) : "-") To @(String.IsNullOrEmpty(_a[3]) == false ? (_a[3].Contains("-") == true ? _a[3].Replace("-", "/") : _a[3]) : "-")
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                            indexTherapy++;
                                        }
                                        if (indexTherapy > 6)
                                        {
                                            <div class="viewMore"><a herf="javascript:void(0);" class="btnViewMore btn btn-link" type="1" onclick="viewMore(this, 5);">View More&nbsp;<i class="ion-chevron-down"></i></a></div>
                                        }
                                    }
                                    else
                                    {
                                        <div style="color:#FFF;text-align:center;"> No history found</div>
                                    }
                                </div>
                            </div>
                        }

                        @if (roles[0] == "Teacher")
                        {
                            <div class="col-md-6 text-left crinterventions boxitem" style="background: #dc7ba8;">
                                <div class="boxheading" style="background: #af708d">
                                    <i class="ion-android-list" style="position: absolute; top: 4px; left: 12px; font-size: 16px;"></i>Classroom Interventions <span style="float: right;"><a class="btnAdd btn btn-link" style="color:#FFF;" href="@Url.Action("Question", "UserQuestion", new { surveyID = 44, ChildId = childID, ChildName = childName })">Add</a></span>
                                </div>
                                <div style="padding: 5px;overflow: hidden; font-size: 12px;" class="content mCustomScrollbar classroominterventions">
                                    @if (dsReveseandLiveEvent.Tables[4].Rows.Count > 0)
                                    {
                                        int indexCRI = 1;
                                        foreach (System.Data.DataRow dr in dsReveseandLiveEvent.Tables[4].Rows)
                                        {
                                            <div indexer="@indexCRI" style="cursor:pointer;padding:4px 4px 4px 4px;border-bottom:solid 1px rgba(0, 0, 0, 0.12);margin-bottom:5px;@(dr["EndDate"] != DBNull.Value && Convert.ToDateTime(dr["EndDate"]) < DateTime.Now ? "color: #111;" : "")@(indexCRI > 5 ? "display:none;" : "")" class="crintervention item" onclick="location.href = '@Url.Action("Question", "UserQuestion", new { surveyID = 44, ChildId = childID, ChildName = childName, criid = dr["Id"] })'">
                                                <div style="overflow:hidden;position: relative;@( @dr["Title"].ToString() == "" ? "display:none;" : "") " title="@dr["Title"]" data-toggle='tooltip'>
                                                    <div style="font-weight:bold;text-transform:capitalize;">@dr["Title"]</div>
                                                    <div>On @dr["StartDate"] - @dr["EndDate"]</div>
                                                    <span><a href="javascript:void(0);" class="redCrossInItem" onclick="event.stopPropagation();deleteListItem(this, @dr["Id"], 'crintervention', '@dr["Title"]', function(){ location.reload(true); });"><i class="ion-close" style="color:#FFF;"></i></a></span>
                                                </div>
                                            </div>
                                            indexCRI++;
                                        }
                                        if (indexCRI > 6)
                                        {
                                            <div class="viewMore"><a herf="javascript:void(0);" class="btnViewMore btn btn-link" type="1" onclick="viewMore(this, 2);">View More&nbsp;<i class="ion-chevron-down"></i></a></div>
                                        }
                                    }
                                    else
                                    {
                                        <div style="color:#FFF;text-align:center;">No history found</div>
                                    }
                                </div>
                            </div>
                        }


                    </td>
                }
            </tr>
        </table>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".boxitem .content").mCustomScrollbar({
                scrollButtons: { enable: true },
                theme: "light-thick",
                scrollInertia: 700,
                scrollbarPosition: "inside"
            });

            $('[data-toggle="tooltip"]').tooltip({
                //position: { my: "left+15 center", at: "left+15 center" },
                content: function () {
                    return $(this).attr('title').replace(/_NEWLINE_/g, "<br/>");
                },
            });
        });

        function viewMore(elem, src) {
            var type = parseInt($(elem).attr("type"));
            var itemIndex = 0;
            var box;
            if (src == 1) { box = $(".levents"); }
            if (src == 2) { box = $(".classroominterventions"); }
            if (src == 3) { box = $(".adversereactions"); }
            if (src == 4) { box = $(".medicationhistory"); }
            if (src == 5) { box = $(".therapies"); }

            var totalItems = $(box).find(".item").length;

            if (type == 1) {
                $(box).find(".item").each(function (index, obj) {
                    $(obj).show();
                });

                $(elem).html("View Less&nbsp;<i class='ion-chevron-up'></i>");
                $(elem).attr("type", "2");
            }
            else {
                $(box).find(".item").each(function (index, obj) {
                    if (parseInt($(obj).attr("indexer")) <= 5) {
                        $(obj).show();
                    }
                    else {
                        $(obj).hide();
                    }
                });

                $(elem).html("View More&nbsp;<i class='ion-chevron-down'></i>");
                $(elem).attr("type", "1");
            }

        }
    </script>
}
else
{
    <style type="text/css">
        .highlightError {
            background-color: #FFF0F0 !important;
            color: #444 !important;
        }
    </style>
    <div class="alert alert-info" id="alrtNoChildSelected" style="margin-top: 20px;">
        Please select child to view details
    </div>
    <script type="text/javascript">
        $(function () {
            $("#ddlChildren").addClass("allchildren");
            $(".allchildren").addClass("highlightError");
        });
            //publish test
    </script>
}