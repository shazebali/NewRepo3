@model SurveyApp.Models.Study
@using SurveyApp.Models;
@using System.Data;
@{
    ViewBag.Title = "eBit - Study Information Editor";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ds = SurveyApp.DataHelper.StudyGetByID(Model.Id > 0 ? Model.Id : 0);
}


<h2><a href="javascript:void(0);" id="back" class="btnBack"></a> &nbsp;Study Information Editor</h2>

<style>
    ._panel { background: #fafafa; border: solid 1px #cccccc; padding: 10px; border-radius: 6px; }
    .form-control[disabled] {
        cursor: help;
    }
    .ui-tooltip {background-color: #333;color:#FFF;}
    #frmStudyAdd .name{text-transform:capitalize;}
</style>

<br />
@functions{
    public DataSet ds = null;
    public bool checkSurveyExists(string type, int surveyId, int scheduleId = 0) {
        if (ds != null && ds.Tables[3].Rows.Count > 0)
        {
            foreach (DataRow dr in ds.Tables[3].Rows)
            {
                if (type == "survey")
                {
                    if ((int)dr["SurveyId"] == surveyId)
                    {
                        return true;
                    }
                }
                else if (type == "parentschedule")
                {
                    if ((int)dr["ScheduleIdParent"] == scheduleId && (int)dr["SurveyId"] == surveyId)
                    {
                        return true;
                    }
                }
                else if (type == "teacherschedule")
                {
                    if ((int)dr["ScheduleIdTeacher"] == scheduleId && (int)dr["SurveyId"] == surveyId)
                    {
                        return true;
                    }
                }
                else if (type == "childschedule")
                {
                    if ((int)dr["ScheduleIdChild"] == scheduleId && (int)dr["SurveyId"] == surveyId)
                    {
                        return true;
                    }
                }

            }
        }

        return false;
    }

}

@using (Html.BeginForm("StudyAddEdit", "Study", FormMethod.Post, new { style = "padding-left: 24px;", id = "frmStudyAdd", @class = "form-horizontal" }))
{
    @Html.ValidationSummary();
    @Html.HiddenFor(s => s.Id, new { name = "hdnStudyId", value = Model.Id })
    <input type="hidden" id="hdnSendEmail" name="hdnSendEmail" value="true" />

    <div class="form-group">
        <label class="control-label col-sm-2">Study:*</label>
        <div class="col-sm-4">
            @Html.TextBoxFor(s => s.Name, new { id = "txtStudyName", @class = "form-control", placeholder = "Study Name", onkeyup = "$(this).removeClass('inerror');", @maxlength = "100" })            
        </div>        
        <label class="control-label col-sm-1">Status:*</label>
        <div class="col-sm-2">
            @Html.DropDownListFor(s => s.Status, new SelectList(StudyStatus.GetAllStatus(), "StatusId", "StatusOption"), "Select status", new { id = "ddlStudies", @class = "form-control", onchange = "$(this).removeClass('inerror');" })            
        </div>
        <div class="col-sm-2">@Html.ActionLink("Add Schedule Template", "Index", "Schedule", new object { }, new { @class = "btn btn-link" }) </div>
    </div>
    
    <div class="col-sm-12">
    <table class="table table-striped table-hover" id="tblStudy">
    <thead>
      <tr class="small">
        <th>Survey:*</th>
        <th>Schedule For Parent</th>
        <th>Schedule For Teacher</th>
        <th>Schedule for Student</th>
      </tr>
    </thead>
    <tbody>

        @{int index = 0;}
        @foreach (System.Data.DataRow dr in ds.Tables[1].Rows)
        {
            <tr>
                <td>
                    <label class="col-sm-12 name">
                        <input type="checkbox" name="Survey@(index)" value="@dr["Id"]" @(checkSurveyExists("survey", (int)dr["Id"]) == true? "checked='checked'" : "") onclick="enableDisableSchedule(this);"/>&nbsp;
                        @dr["Title"].ToString()
                    </label>
                </td>

                <td>
                    <select class="form-control ddlParent name" name="Parent@(index)" disabled="disabled" data-toggle='tooltip' title="Please select a Survey first to associate this Schedule" onchange="$(this).removeClass('inerror');" multiple>
                        <option value="0">---</option>
                        @foreach (System.Data.DataRow drSchedule in ds.Tables[2].Rows)
                        {
                        <option value="@drSchedule["Id"]" @(checkSurveyExists("parentschedule", (int)dr["Id"], (int)drSchedule["Id"]) == true ? "selected='selected'" : "")>@drSchedule["Title"]</option>
                        }
                    </select>
                </td>
                <td>
                    <select class="form-control ddlTeacher name" name="Teacher@(index)" disabled="disabled" data-toggle='tooltip' title="Please select a Survey first to associate this Schedule" onchange="$(this).removeClass('inerror');" multiple>
                        <option value="0">---</option>
                        @foreach (System.Data.DataRow drSchedule in ds.Tables[2].Rows)
                        {
                            <option value="@drSchedule["Id"]" @(checkSurveyExists("teacherschedule", (int)dr["Id"], (int)drSchedule["Id"]) == true ? "selected='selected'" : "")>@drSchedule["Title"]</option>
                        }
                    </select>
                </td>
                <td>
                    <select class="form-control ddlChild name" name="Child@(index)" disabled="disabled" data-toggle='tooltip' title="Please select a Survey first to associate this Schedule" onchange="$(this).removeClass('inerror');" multiple>
                        <option value="0">---</option>
                        @foreach (System.Data.DataRow drSchedule in ds.Tables[2].Rows)
                        {
                            <option value="@drSchedule["Id"]" @(checkSurveyExists("childschedule", (int)dr["Id"], (int)drSchedule["Id"]) == true ? "selected='selected'" : "")>@drSchedule["Title"]</option>
                        }
                    </select>
                </td>
            </tr>
            index++;
        }
     </table>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-0 col-sm-9" style="margin-top:10px;">
            @Html.Hidden("SurveyCount", ds.Tables[1].Rows.Count)
            @Html.Hidden("StudyId", Model.Id)
            <button type="submit" id="btnSubmitStudy" class="btn btn-default">Save Information</button>
            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index", "Study")';">Cancel</button>
        </div>
    </div>
}

<script type="text/javascript">
    function enableDisableSchedule(elem) {
        var isChecked = $(elem)[0].checked;

        if (isChecked == true) {
            $(elem).closest("tr").find("select").removeAttr("disabled").attr("title", "Please use CTRL+Click to multi-select the schedules.");
        }
        else {
            $(elem).closest("tr").find("select").val(0);
            $(elem).closest("tr").find("select").attr("disabled", "disabled").attr("title", "Please select a Survey first to associate this Schedule");
        }
    }

    $(function () {
        $("#frmStudyAdd").submit(function () {
            var isValid = true;
            $("#tblStudy").find("select").removeClass("inerror");

            var errors = "";
            if ($("#txtStudyName").val() == "") {
                $("#txtStudyName").addClass("inerror");
                errors += "Please enter name for the study \n";
            }
            if ($("#ddlStudies").val() == "") {
                errors += "Please select status for the study \n";
                $("#ddlStudies").addClass("inerror");
            }

            $("#tblStudy").find("input[type=checkbox]").each(function (index, obj) {
                var isParentSelected = true;
                var isTeacherSelected = true;
                var isChildSelected = true;

                if ($(obj)[0].checked == true) {
                    var survey = $($(obj).closest("tr").find("td")[0]).find("label").text();
                    if ($(obj).closest("tr").find(".ddlParent").val() == "" || $(obj).closest("tr").find(".ddlParent").val() == null || $(obj).closest("tr").find(".ddlParent").val() == "0") {
                        $(obj).closest("tr").find(".ddlParent").addClass("inerror");
                        isParentSelected = false;
                    }
                    if ($(obj).closest("tr").find(".ddlTeacher").val() == "" || $(obj).closest("tr").find(".ddlTeacher").val() == null || $(obj).closest("tr").find(".ddlTeacher").val() == "0") {
                        $(obj).closest("tr").find(".ddlTeacher").addClass("inerror");
                        isTeacherSelected = false;
                    }
                    if ($(obj).closest("tr").find(".ddlChild").val() == "" || $(obj).closest("tr").find(".ddlChild").val() == null || $(obj).closest("tr").find(".ddlChild").val() == "0") {
                        $(obj).closest("tr").find(".ddlChild").addClass("inerror");
                        isChildSelected = false;
                    }
                    if (isParentSelected == false && isTeacherSelected == false && isChildSelected == false) {
                        errors += "Please select atealst one schedule for " + survey.trim() + " \n";
                        isValid = false;
                    }
                }
            });

            if (isValid == false) {
                $('.loading').hide();
                $('.disablebackground').hide();
                bootbox.alert(errors);
                return false;
            }


        });

        $('[data-toggle="tooltip"]').tooltip({
            content: function () {
                return $(this).attr('title').replace(/<br\/>/g, "<br/>");
            },
        });

        $("#tblStudy").find("input[type=checkbox]:checked").each(function (index, obj) {
            if ($(obj)[0].checked == true) {
                enableDisableSchedule($(obj));
            }
        });

        $("#btnSubmitStudy").click(function (e) {
            e.preventDefault();
            $('.loading').show();
            $('.disablebackground').show();

            bootbox.dialog({
                message: "Would you like to send “assessment assignment” email to respondents?",
                title: "Email Confirmation",
                closeButton: false,
                onEscape: function() {
                    $("#hdnSendEmail").val(false);
                    $("#frmStudyAdd").submit();
                },
                buttons: {
                    success: {
                            label: "Send",
                            className: "btn-primary",
                            callback: function() {
                                $("#hdnSendEmail").val(true);
                                $("#frmStudyAdd").submit();
                            }
                    },
                    danger: {
                        label: "Don't Send",
                        className: "btn-default",
                        callback: function() {
                            $("#hdnSendEmail").val(false);
                            $("#frmStudyAdd").submit();
                        }
                    }
                }
            });
        });

        $(".btnBack").click(function(){
            bootbox.dialog({
                message: "Would you like to save the changes?",
                title: "Save Changes!",
                closeButton: false,
                onEscape: function() {
                    location.href = "@Url.Action("Index", "Study")";
                },
                buttons: {
                    success: {
                        label: "Yes",
                        className: "btn-primary",
                        callback: function() {
                            $("#btnSubmitStudy").click();
                        }
                    },
                    danger: {
                        label: "No",
                        className: "btn-default",
                        callback: function() {
                            location.href = "@Url.Action("Index", "Study")";
                        }
                    }
                }
            });
        });
    });


</script>